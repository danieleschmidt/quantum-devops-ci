name: Quantum CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  PYTHON_VERSION: '3.9'
  NODE_VERSION: '18'

jobs:
  quantum-lint:
    name: Quantum Circuit Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install quantum frameworks
        run: |
          pip install --upgrade pip
          pip install qiskit>=0.45.0 cirq>=1.3.0
          pip install -e .
      
      - name: Run quantum circuit linting
        run: |
          quantum-lint check src/ --format github
          quantum-lint check-pulses pulses/ --format github || true
        continue-on-error: true
  
  quantum-test:
    name: Noise-Aware Quantum Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        framework: [qiskit, cirq]
        noise-level: [0.001, 0.01, 0.05]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -e .[dev,all]
      
      - name: Run noise-aware tests
        run: |
          quantum-test run \
            --framework ${{ matrix.framework }} \
            --backend qasm_simulator \
            --noise-level ${{ matrix.noise-level }} \
            --shots 1000 \
            --timeout 300
      
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: quantum-test-results-${{ matrix.framework }}-${{ matrix.noise-level }}
          path: test-results/
  
  build-and-test:
    name: Build & Integration Tests
    runs-on: ubuntu-latest
    needs: [quantum-lint, quantum-test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install dependencies
        run: |
          npm install
          pip install -e .[dev,all]
      
      - name: Run linting
        run: |
          npm run lint
      
      - name: Run type checking
        run: |
          npm run typecheck
      
      - name: Run unit tests
        run: |
          npm run test:unit
      
      - name: Run integration tests
        run: |
          npm run test:integration
      
      - name: Run Python tests
        run: |
          python -m pytest tests/ -v --cov=src/quantum_devops_ci --cov-report=xml
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: python
          name: quantum-devops-ci