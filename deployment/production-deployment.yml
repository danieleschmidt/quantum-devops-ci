# Production Deployment Configuration for Quantum DevOps CI
# Auto-generated by Terragon Autonomous SDLC v4.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: quantum-devops-ci
  namespace: production
  labels:
    app: quantum-devops-ci
    version: "1.0.0"
    tier: production
    component: quantum-testing-framework
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: quantum-devops-ci
  template:
    metadata:
      labels:
        app: quantum-devops-ci
        version: "1.0.0"
        tier: production
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: quantum-devops-ci
        image: quantum-devops/quantum-devops-ci:1.0.0
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: QUANTUM_ENV
          value: "production"
        - name: LOG_LEVEL
          value: "info"
        - name: ENABLE_MONITORING
          value: "true"
        - name: ENABLE_METRICS
          value: "true"
        - name: CACHE_TTL_SECONDS
          value: "3600"
        - name: MAX_WORKERS
          value: "8"
        - name: MAX_CONCURRENT_TESTS
          value: "20"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: cache-storage
          mountPath: /app/cache
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: config
        configMap:
          name: quantum-devops-ci-config
      - name: cache-storage
        persistentVolumeClaim:
          claimName: quantum-cache-pvc
      - name: logs
        emptyDir: {}
      nodeSelector:
        node-type: compute-optimized
      tolerations:
      - key: "quantum-workload"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"

---
apiVersion: v1
kind: Service
metadata:
  name: quantum-devops-ci-service
  namespace: production
  labels:
    app: quantum-devops-ci
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  - port: 9090
    targetPort: 9090
    protocol: TCP
    name: metrics
  selector:
    app: quantum-devops-ci

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: quantum-devops-ci-config
  namespace: production
data:
  quantum.config.yml: |
    # Quantum DevOps CI Production Configuration
    version: "1.0.0"
    
    # Framework Configuration
    frameworks:
      qiskit:
        enabled: true
        default_backend: "aer_simulator"
        max_qubits: 20
      cirq:
        enabled: true
        default_backend: "cirq_simulator"
        max_qubits: 20
      pennylane:
        enabled: false
        
    # Performance Configuration
    performance:
      max_workers: 8
      max_concurrent_tests: 20
      cache_size_mb: 512
      timeout_seconds: 300
      enable_optimization: true
      
    # Security Configuration
    security:
      enable_auth: true
      enable_audit: true
      rate_limit_per_minute: 100
      max_circuit_depth: 100
      max_shots_per_test: 10000
      
    # Monitoring Configuration
    monitoring:
      enable_metrics: true
      metrics_port: 9090
      health_check_interval: 30
      log_level: "info"
      
    # Resilience Configuration
    resilience:
      max_retries: 3
      circuit_breaker_threshold: 5
      timeout_seconds: 300
      auto_recovery: true
      
    # Cost Optimization
    cost:
      enable_optimization: true
      max_monthly_budget: 10000
      cost_tracking: true
      
  logging.yml: |
    version: 1
    formatters:
      default:
        format: '[%(asctime)s] %(levelname)s in %(module)s: %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        level: INFO
        formatter: default
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        level: DEBUG
        formatter: default
        filename: /app/logs/quantum-devops-ci.log
    root:
      level: INFO
      handlers: [console, file]

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: quantum-cache-pvc
  namespace: production
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: quantum-devops-ci-ingress
  namespace: production
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - quantum-ci.company.com
    secretName: quantum-devops-ci-tls
  rules:
  - host: quantum-ci.company.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: quantum-devops-ci-service
            port:
              number: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: quantum-devops-ci-hpa
  namespace: production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: quantum-devops-ci
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: quantum-devops-ci-pdb
  namespace: production
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: quantum-devops-ci