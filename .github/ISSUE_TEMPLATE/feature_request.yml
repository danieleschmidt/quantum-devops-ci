name: âœ¨ Feature Request
description: Suggest a new feature or enhancement for quantum-devops-ci
title: "[FEATURE] "
labels: ["enhancement", "needs-triage"]
assignees: []

body:
  - type: markdown
    attributes:
      value: |
        Thanks for suggesting a new feature! Please fill out the sections below to help us understand your request.

  - type: checkboxes
    id: checklist
    attributes:
      label: Pre-submission Checklist
      description: Please check these boxes before submitting
      options:
        - label: I have searched existing issues and discussions to ensure this is not a duplicate
          required: true
        - label: I have read the project roadmap and documentation
          required: true
        - label: This feature would benefit the broader quantum computing community
          required: true

  - type: textarea
    id: problem
    attributes:
      label: Problem Statement
      description: What problem does this feature solve? What pain point are you experiencing?
      placeholder: |
        Describe the problem you're trying to solve...
        
        For example:
        - "It's difficult to test quantum circuits with custom noise models..."
        - "There's no way to automatically optimize circuits for specific hardware..."
        - "CI/CD pipelines lack support for quantum algorithm benchmarking..."
    validations:
      required: true

  - type: textarea
    id: solution
    attributes:
      label: Proposed Solution
      description: Describe your proposed solution in detail
      placeholder: |
        Describe your proposed solution...
        
        For example:
        - New CLI commands
        - API endpoints
        - Configuration options
        - Workflow enhancements
        - Integration capabilities
    validations:
      required: true

  - type: dropdown
    id: component
    attributes:
      label: Component
      description: Which component would this feature affect?
      options:
        - Testing framework (quantum-test)
        - Linting (quantum-lint)
        - Benchmarking (quantum-benchmark)
        - Deployment (quantum-deploy)
        - CLI interface
        - Docker containers
        - Documentation
        - CI/CD workflows
        - New component
        - Multiple components
    validations:
      required: true

  - type: dropdown
    id: quantum_framework
    attributes:
      label: Quantum Framework Support
      description: Which quantum frameworks should this feature support?
      multiple: true
      options:
        - Qiskit
        - Cirq
        - PennyLane
        - Amazon Braket
        - Framework-agnostic
        - New framework integration

  - type: textarea
    id: use_cases
    attributes:
      label: Use Cases
      description: Describe specific use cases where this feature would be valuable
      placeholder: |
        List specific use cases:
        
        1. **Quantum Algorithm Developer**: As a developer, I want to...
        2. **DevOps Engineer**: As a DevOps engineer, I need to...
        3. **Research Team**: As a research team, we would like to...
        4. **Enterprise User**: As an enterprise user, I require...
    validations:
      required: true

  - type: textarea
    id: examples
    attributes:
      label: Code Examples
      description: Provide examples of how this feature would be used
      placeholder: |
        # Example usage
        quantum-test run --custom-noise-model my_noise.yml
        
        # Example configuration
        quantum_config:
          custom_features:
            new_feature: enabled
            
        # Example API
        from quantum_devops_ci import new_feature
        result = new_feature.process(circuit, options)
      render: bash

  - type: dropdown
    id: priority
    attributes:
      label: Priority
      description: How important is this feature to you?
      options:
        - Critical - Blocking current work
        - High - Would significantly improve workflow
        - Medium - Nice to have, would be useful
        - Low - Minor improvement
    validations:
      required: true

  - type: dropdown
    id: complexity
    attributes:
      label: Estimated Complexity
      description: How complex do you think this feature would be to implement?
      options:
        - Simple - Small change, minimal impact
        - Medium - Moderate changes across few components
        - Complex - Significant changes, multiple components
        - Major - Large architectural changes required
        - Unknown - Not sure about implementation complexity

  - type: textarea
    id: alternatives
    attributes:
      label: Alternative Solutions
      description: What alternative solutions have you considered?
      placeholder: |
        Describe alternative approaches you've considered:
        
        - Manual workarounds you're currently using
        - Other tools or libraries that provide similar functionality
        - Different architectural approaches
        - Simpler solutions that might also work

  - type: textarea
    id: implementation
    attributes:
      label: Implementation Ideas
      description: Do you have ideas about how this could be implemented?
      placeholder: |
        If you have technical ideas about implementation:
        
        - Architecture suggestions
        - Technology choices
        - Integration points
        - API design ideas
        - Testing approaches
        
        Don't worry if you don't have technical details - we can figure that out!

  - type: checkboxes
    id: contribution
    attributes:
      label: Contribution
      description: Would you be interested in contributing to this feature?
      options:
        - label: I would like to work on implementing this feature
        - label: I can help with testing and feedback
        - label: I can contribute documentation
        - label: I can provide domain expertise and requirements
        - label: I prefer to let the maintainers implement this

  - type: textarea
    id: resources
    attributes:
      label: Additional Resources
      description: Any additional resources, links, or references that might be helpful
      placeholder: |
        - Related academic papers
        - Documentation from other tools
        - Community discussions
        - Benchmark datasets
        - Example quantum circuits or algorithms

  - type: dropdown
    id: breaking_changes
    attributes:
      label: Breaking Changes
      description: Would this feature require breaking changes to existing APIs?
      options:
        - No breaking changes expected
        - Minor breaking changes acceptable
        - Major breaking changes justified
        - Not sure about breaking changes

  - type: textarea
    id: additional_context
    attributes:
      label: Additional Context
      description: Any other information that would be helpful
      placeholder: |
        - Timeline constraints
        - Budget considerations  
        - Integration requirements
        - Performance requirements
        - Security considerations
        - Compliance requirements

  - type: markdown
    attributes:
      value: |
        ---
        
        ## Feature Development Process
        
        After submitting this feature request:
        
        1. **Triage**: Maintainers will review and label the issue
        2. **Discussion**: Community discussion about requirements and approach  
        3. **Design**: Technical design and API specification
        4. **Implementation**: Development of the feature
        5. **Testing**: Comprehensive testing and validation
        6. **Documentation**: User guides and API documentation
        7. **Release**: Feature included in next release
        
        Thank you for helping improve quantum-devops-ci! ðŸŒŒ