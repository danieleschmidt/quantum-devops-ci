# Terragon Autonomous SDLC Value Discovery Configuration
# Configuration for continuous value discovery and autonomous improvements

scoring:
  # Adaptive weights based on repository maturity level
  weights:
    nascent:
      wsjf: 0.4
      ice: 0.3
      technicalDebt: 0.2
      security: 0.1
    developing:
      wsjf: 0.5
      ice: 0.2
      technicalDebt: 0.2
      security: 0.1
    maturing:
      wsjf: 0.6
      ice: 0.1
      technicalDebt: 0.2
      security: 0.1
    advanced:
      wsjf: 0.5
      ice: 0.1
      technicalDebt: 0.3
      security: 0.1
  
  # Score thresholds and multipliers
  thresholds:
    minScore: 10
    maxRisk: 0.8
    securityBoost: 2.0
    complianceBoost: 1.8
    quantumSpecificBoost: 1.5  # Boost for quantum-specific improvements
    cicdBoost: 1.3            # Boost for CI/CD enhancements

# Value discovery sources and tools
discovery:
  sources:
    - gitHistory
    - staticAnalysis
    - issueTrackers
    - vulnerabilityDatabases
    - performanceMonitoring
    - userFeedback
    - quantumSpecific  # Quantum computing specific analysis
  
  tools:
    staticAnalysis:
      - eslint
      - flake8
      - mypy
      - bandit
      - safety
    security:
      - snyk
      - dependabot
      - bandit
      - safety
    quantum:
      - qiskit-lint
      - cirq-validator
      - quantum-circuit-analyzer
    performance:
      - quantum-benchmarks
      - cost-analyzer

# Execution configuration
execution:
  maxConcurrentTasks: 1
  testRequirements:
    minCoverage: 80
    performanceRegression: 5
    quantumFidelityThreshold: 0.85
  rollbackTriggers:
    - testFailure
    - buildFailure
    - securityViolation
    - quantumValidationFailure
  
  # Quantum-specific execution rules
  quantumRules:
    maxCircuitDepth: 100
    maxQubitCount: 50
    minFidelity: 0.8
    costThreshold: 1000.0  # USD per month

# Repository maturity assessment
maturity:
  current: "maturing"  # nascent, developing, maturing, advanced
  targetLevel: "advanced"
  assessmentCriteria:
    - codeQuality
    - testCoverage
    - cicdMaturity
    - securityPosture
    - documentationCompleteness
    - quantumBestPractices

# Continuous improvement targets
targets:
  codeQuality:
    lintScore: 9.5
    complexityThreshold: 10
    duplicateCodeMax: 3
  testing:
    unitCoverage: 90
    integrationCoverage: 80
    quantumTestCoverage: 85
  security:
    vulnerabilityCount: 0
    secretsDetection: true
    dependencyAudit: true
  quantum:
    circuitOptimization: true
    noiseModelValidation: true
    costOptimization: true
    hardwareCompatibility: true

# Value tracking and metrics
metrics:
  trackingEnabled: true
  reportingFrequency: "weekly"
  dashboardUrl: "https://terragon-dashboard.local"
  exportFormats: ["json", "csv", "yaml"]
  
  # Key Performance Indicators
  kpis:
    - velocityTrend
    - technicalDebtRatio
    - securityPosture
    - quantumPerformance
    - costEfficiency
    - developerExperience

# Integration settings
integrations:
  github:
    enabled: true
    autoCreatePRs: true
    labelStrategy: "auto-value"
  
  slack:
    enabled: false
    webhook: ""
    channels: ["#quantum-devops"]
  
  jira:
    enabled: false
    projectKey: ""
    issueTypes: ["Task", "Bug", "Improvement"]

# Autonomous operation schedule
schedule:
  continuous:
    enabled: true
    interval: "1h"  # Hourly value discovery
  
  dailyAnalysis:
    enabled: true
    time: "02:00"  # 2 AM UTC
    comprehensive: true
  
  weeklyReview:
    enabled: true
    day: "monday"
    time: "03:00"
    deepAnalysis: true
  
  monthlyRecalibration:
    enabled: true
    day: 1
    time: "04:00"
    modelUpdate: true